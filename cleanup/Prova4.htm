<!DOCTYPE HTML>
<html>
  <head>
    <style>
      body {
        margin: 0px;
        padding: 0px;
      }
      canvas {
        border: 1px solid #9C9898;
      }
      #container {
        background-image: url('./images/EDIFICIO_A_PIANO_PRIMO.jpg');
        width: 1164px;
        height: 500px;
      }
    </style>
    <script src="http://www.html5canvastutorials.com/libraries/kinetic-v3.9.6.js"></script>
    <script>
	  var stage;
      window.onload = function() {
          stage = new Kinetic.Stage({
          container: "container",
          width: 1164,
          height: 500
        });
        var flowerLayer = new Kinetic.Layer();
        var lineLayer = new Kinetic.Layer();
        var flower = new Kinetic.Group({
          x: stage.getWidth() / 2,
          y: stage.getHeight() / 2
        });

        // build stem
        var stem = new Kinetic.Line({
          strokeWidth: 10,
          stroke: "green",
          points: [{
            x: flower.getX(),
            y: flower.getY()
          }, {
            x: stage.getWidth() / 2,
            y: stage.getHeight() + 10
          }]
        });

        // build center
        var center = new Kinetic.Circle({
          x: 0,
          y: 0,
          radius: 20,
          fill: "yellow",
          stroke: "black",
          strokeWidth: 4
        });

        center.on("mousedown", function() {
          document.body.style.cursor = "pointer";
        });

        center.on("mouseover", function() {
          flower.draggable(true);
          this.setFill("orange");
          flowerLayer.draw();
        });

        center.on("mouseout", function() {
          flower.draggable(false);
          this.setFill("yellow");
          flowerLayer.draw();
        });
        // build petals
        var numPetals = 4;
        for(var n = 0; n < numPetals; n++) {
          // induce scope
          ( function() {
            /*
             * draw custom shape because KineticJS
             * currently does not support tear drop
             * geometries
             */
            var petal = new Kinetic.Shape({
              drawFunc: function() {
                var context = this.getContext();
                context.globalAlpha = 0.4;
                context.beginPath();
                context.moveTo(-5, -20);
                context.bezierCurveTo(-20, -150, 20, -150, 5, -20);
                context.closePath();
                this.applyStyles();
              },
              fill: "#8DC8FC",
              strokeWidth: 2,
              draggable: true,
              rotation: 2 * Math.PI * n / numPetals
            });

            petal.on("dragstart", function() {
              this.moveToTop();
              center.moveToTop();
            });

            petal.on("mouseover", function() {
              //this.setFill("blue");
			  
              flowerLayer.draw();
            });

            petal.on("mouseout", function() {
              //this.setFill("#00dddd");
              flowerLayer.draw();
            });

            flower.add(petal);
          }());
        }

        stage.on("mouseup", function() {
          document.body.style.cursor = "default";
        });

        flower.on("dragmove", function() {
          stem.attrs.points[0] = this.getPosition();
          lineLayer.draw();
        });

        lineLayer.add(stem);
        flower.add(center);
        flowerLayer.add(flower);
        stage.add(lineLayer);
        stage.add(flowerLayer);

        var angularSpeed = Math.PI / 1000;
        stage.onFrame(function(frame) {
          var k = 10 - (frame.time/1000);
		  if (k < 0.05) k = 0.05;
          var angleDiff = frame.timeDiff * angularSpeed / k;
		  document.getElementById('num').innerHTML="frame.time=" + frame.time + ", frame.time= " + frame.time + ", k=" + k; 
		  flower.rotate(angleDiff);
          flowerLayer.draw();
        });
		
		//var t=setTimeout("stage.start()",3000);
		//stage.start();
		
		  //stage.onFrame(function(frame) {
			//flower.rotate(Math.PI / 10);
		  //});
      };

    </script>
  </head>
  <body onmousedown="return false;">
    <div id="container"></div>
	<div id="num" />
  </body>
</html>