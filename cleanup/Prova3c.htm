<!DOCTYPE HTML>
<html>
  <head>
    <style>
      body {
        margin: 0px;
        padding: 0px;
      }
      canvas {
        border: 1px solid #9C9898;
      }
      #container {
        background-image: url('./images/EDIFICIO_A_PIANO_PRIMO.jpg');
        width: 1164px;
        height: 500px;
      }
    </style>
    <script src="./libraries/kinetic-v3.9.5.js"></script>
    <script type="text/javascript" src="controller/maintMgr.js"></script>
    <script>
	  var layer = new Kinetic.Layer({
	  });
	  var polyArray = new Array();  
	    
      function updateDottedLines(layer) {
    	
    	console.log("updateDotted")  

    	for (i=0;i<polyArray.length;i++) {
	        var c = eval("layer.polyPnts" + i);
	        var polyLine = layer.get('#polyLine'+i)[0];
	        
	        polyLine.setPoints([
	          c.start.attrs.x, c.start.attrs.y, 
	          c.control1.attrs.x, c.control1.attrs.y, 
	          c.control2.attrs.x, c.control2.attrs.y,
	          c.control3.attrs.x, c.control3.attrs.y,
	          c.control4.attrs.x, c.control4.attrs.y,
	          c.end.attrs.x, c.end.attrs.y
	        ]);
    	}
      }
      function buildAnchor(layer, x, y, anchor) {
    	
        var anchor = new Kinetic.Circle({
          x: parseInt(x),
          y: parseInt(y),
          radius: 2,
          stroke: "#666",
          fill: "#ddd",
          strokeWidth: 2,
          draggable: true
        });

        // add hover styling
        anchor.on("mouseover", function() {
          document.body.style.cursor = "pointer";
          this.setStrokeWidth(4);
          layer.draw();
        });
        anchor.on("mouseout", function() {
          document.body.style.cursor = "default";
          this.setStrokeWidth(2);
          layer.draw();
        });

        layer.add(anchor);
        return anchor;
      }
      
      function createPolyAnchors(layer, arr) {
    	  
    	  var poly;
    	  var i=0;
    	  var objPriv;
    	  
    	  for (o in arr) {
    		  
    		var c = arr[o].split(",");  
    		var id = "polyLine"+i;
   	        
    		// crate polygon and add it to layer
    		poly = new Kinetic.Polygon({
   		        //points: c,
   		        fill: "#00D2F0",
   		        alpha: 0.2,
   		        stroke: "#00D2F0",
   		        strokeWidth: 0,
   		        id: id
   	        });
   	        layer.add(poly);
   	        
   	        // create anchor objs and add the to layer.
   	        objPriv = {
       	      start: buildAnchor(layer, c[0],c[1]),
   	          control1: buildAnchor(layer, c[2],c[3]),
   	          control2: buildAnchor(layer, c[4],c[5]),
   	          control3: buildAnchor(layer, c[6],c[7]),
   	          control4: buildAnchor(layer, c[8],c[9]),
   	          end: buildAnchor(layer, c[10],c[11])
   			};
   			//objArr.push(objPriv);
   			//layer.polyPnts0 = objPriv;
   			eval("layer.polyPnts"+i+" = objPriv");
   			i++;
   			//layer.polyPnts = objPriv;
    	  }
      }
      
      function createAnchors2(layer) {
          layer.poly = {
                  start: buildAnchor(layer, 73, 192),
                  control1: buildAnchor(layer, 73, 160),
                  control2: buildAnchor(layer, 340, 23),
                  control3: buildAnchor(layer, 500, 109),
                  control4: buildAnchor(layer, 499, 139),
                  end: buildAnchor(layer, 342, 93)
                };
      };
      
      function createAnchors(lyr, arr) {
    	  
    	  var poly;
    	  var i=0;
    	  var objPriv;
    	  
    	  for (o in arr) {( function() {
    		console.log("arr[o] = " + arr[o]);  
    		var c = arr[o].split(",");
    		console.log("c = " + c);  
    		var id = "polyLine";
			
    		console.log("c[1] =" + c[1]);
    		
   	        // create anchor objs and add the to layer.
   	        layer.poly = {
       	      start: buildAnchor(layer, c[0], c[1]),
   	          control1: buildAnchor(layer, c[2], c[3]),
   	          control2: buildAnchor(layer, c[4], c[5]),
   	          control3: buildAnchor(layer, c[6], c[7]),
   	          control4: buildAnchor(layer, c[8], c[9]),
   	          end: buildAnchor(layer, c[10], c[11])
   			};
   	        console.log("lyr.poly.start =" + lyr.poly.start);
   	        //lyr.draw();
   			//objArr.push(objPriv);
   			//layer.polyPnts0 = objPriv;
   			//eval("layer.polyPnts"+i+" = objPriv");
   			//i++;
   			//layer.polyPnts = objPriv;
    	  }());
    	}; 
      };
      
      

      // start here ....
      window.onload = function() {
    	console.log("window.onload ...");  
    	maintObj = new maintMgr();  
        var stage = new Kinetic.Stage({
          container: "container",
          width: 1164,
          height: 500
        });

        var cPoly1 = "73,192,73,160,340,23,500,109,499,139,342,93";
        var cPoly2 = "626,401,628,324,744,324,994,323,996,403,628,402";

     	polyArray.push(cPoly1);
        polyArray.push(cPoly2);
     
	    createPolyAnchors(layer, polyArray);
        
//         var poly = new Kinetic.Polygon({
// 	        //points: [73, 192, 73, 160, 340, 23, 500, 109, 499, 139, 342, 93],
// 	        fill: "#00D2FF",
// 	        alpha: 0.3,
// 	        stroke: "black",
// 	        strokeWidth: 3,
// 	        id: "polyLine"
//         });
        
//         // add dotted line connectors
//         layer.add(poly);
       
        /*
         * update the dotted line points before
         * drawing the layer
         */
        layer.beforeDraw(function() {
          updateDottedLines(layer);
        });
        /*
         * add custom property curve objects to layer so that
         * they can be modified by reference
         */
         
//         createAnchors(layer, polyArray);
//         layer.poly = {
//           start: buildAnchor(layer, 73, 192),
//           control1: buildAnchor(layer, 73, 160),
//           control2: buildAnchor(layer, 340, 23),
//           control3: buildAnchor(layer, 500, 109),
//           control4: buildAnchor(layer, 499, 139),
//           end: buildAnchor(layer, 342, 93)
//         };
        
//         stage.on("mouseout", function() {
//           layer.draw();
//         });

        stage.add(layer);
      };

    </script>
  </head>
  <body onmousedown="return false;">
    <div id="container"></div>
  </body>
</html>